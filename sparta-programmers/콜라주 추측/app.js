// 1-1. 입력된 수가 짝수라면 2로 나눕니다.
// 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
// 2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.

// 예를 들어, 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다.
// 위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, solution을 완성해 주세요.

/*
문제 접근 방식 
반복문을 500까지 돌면서

->1이되면 종료하기때문에 1이 아닐때 까지 단계별로 로직을 구한다. 
->그리고 1이 된다면 리턴하고 반복하면서 돈 횟수를 리턴한다.(i)
->만약 500번동안 1이 안되면 -1을 리턴 



*/

function solution(num) {
  let answer = 0;

  for (let i = 0; i < 500; i++) {
    if (num != 1) {
      num = num % 2 === 0 ? num / 2 : num * 3 + 1;
    } else {
      console.log(i);
      answer = i;
      return answer;
    }
  }
  return (answer = -1);
}

solution(6);
